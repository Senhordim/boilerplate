import 'dart:io';
import 'package:dio/dio.dart';
import 'package:$project$/utils/config.dart';

class HttpRequestDio {
  Dio _dio;
  String _url;
  String _errorMessage = "Ocorreu um erro ao executar a consulta, favor tentar novamente.";

  HttpRequestDio(String url, {String authenticationToken, String errorMessage}) {
    _url = url;
    _dio = Dio();
    _dio.options.connectTimeout = 50000;
    _dio.options.receiveTimeout = 50000;
    _dio.options.headers = {
      HttpHeaders.contentTypeHeader: "application/json",
      HttpHeaders.authorizationHeader: " ${authenticationToken ?? Config.DRFToken}"
    };
    if (errorMessage != null && errorMessage.isNotEmpty){
      _errorMessage = errorMessage;
    }
  }

  Future<dynamic> getHttp() async {
    try {
      Response _response = await _dio.get(_url);
      if (_response.statusCode == 200) {
        return _response.data;
      }
      return null;
    } on DioError catch (error) {
      return throw {"error": error, "message": _errorMessage};
    }
  }

  Future<dynamic> postHttp(data) async {
    try {
      Response _response = await _dio.post(_url, data: data);
      if (_response.statusCode == 201) {
        return _response.data;
      }
      return null;
    } on DioError catch (error) {
      return throw {"error": error, "message": _errorMessage};
    }
  }

  Future<dynamic> putHttp(data, String id) async {
    try {
      Response _response = await _dio.put(_url, data: data);
      if (_response.statusCode == 200) {
        return _response.data;
      }
      return null;
    } on DioError catch (error) {
      return throw {"error": error, "message": _errorMessage};
    }
  }

  Future<dynamic> deleteHttp(data, String id) async {
    try {
      Response _response = await _dio.delete(_url, data: data);
      if (_response.statusCode == 200) {
        return _response.data;
      }
      return null;
    } on DioError catch (error) {
      return throw {"error": error, "message": _errorMessage};
    }
  }
}